{
  "hash": "f0ace71b0e028664e47e449a554fe342",
  "result": {
    "markdown": "---\ntitle: \"Managing Runs\"\naliases:\n    - ../../tools/tfruns/managing/index.html\n    - /tools/tfruns/managing/index.html\n    - /tools/tfruns/articles/managing.html\n---\n\n\n\n\n## Run Output\n\nAny graphical or console output as well as file artifacts created by a training run (e.g. saved models or saved model weights) can be viewed from the **Output** tab of the run view:\n\n<kbd><img src=\"images/view_run_output.png\" width=675/></kbd>\n\nYou can use the `copy_run_files()` function to export file artifacts from runs into another directory. For example:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncopy_run_files(\"runs/2017-09-24T10-54-00Z\", to = \"saved-model\")\n```\n:::\n\n\nYou can also use the `copy_run()` function to export a run directory in it's entirety. For example, this code exports the specified run to a \"best-run\" directory:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncopy_run(\"runs/2017-09-24T10-54-00Z\", to = \"best-run\")\n```\n:::\n\n\nNote that `copy_run()` will accept any number of runs. For example, this code exports all run directories with an evaluation accuracy greater than 0.98 to a \"best-runs\" directory:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncopy_run(ls_runs(eval_acc >= 0.98), to = \"best-runs\")\n```\n:::\n\n\n## Cleaning Runs\n\nYou can use the `clean_runs()` function to archive a set of runs you no longer need the data from. For example, this code archives all runs with an eval accuracy less than 0.98:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclean_runs(ls_runs(eval_acc < 0.98))\n```\n:::\n\n\nIf you don't specify a set of runs to clean then all runs will be archived:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclean_runs() # archives all runs in the \"runs\" directory\n```\n:::\n\n\nNote that you'll always get a confirmation prompt before the runs are actually archived.\n\n## Purging Runs\n\nWhen runs are archived they are moved to the \"archive\" subdirectory of the \"runs\" directory. If you want to permanently remove runs from the archive you call the `purge_runs()` function:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npurge_runs()\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}